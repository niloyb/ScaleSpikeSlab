# Linear regression application plots
library(dplyr)
library(ggplot2)
library(latex2exp)
library(reshape2)
library(ggpubr)

# data <- 'malware', 'lymph', 'riboflavin' or 'maize'
generate_plot <- function(data){
  filename <- paste('/Users/niloybiswas/Google Drive/My Drive/Niloy_Files/github/ScalableSpikeSlab/inst/dataset_simulations/', data, '_simulations.RData', sep = '')
  load(filename)
  # probs_covariate_slab <- colMeans(sss_z)
  # hist(colMeans(sss_z))
  # plot(sort(probs_covariate_slab, decreasing = TRUE))
  probs_df <- 
    data.frame(data=data, rowno=c(1: length(sss_z)), covariate_index=order(sss_z, decreasing = TRUE), 
               prob_covariate_slab=sort(sss_z, decreasing = TRUE))
  
  if(data=='malware'){xlab_title <- TeX('Malware Covariates')}
  if(data=='lymph'){xlab_title <- TeX('Lymph Node Covariates')}
  if(data=='riboflavin'){xlab_title <- TeX('Riboflavin Covariates')}
  if(data=='maize'){xlab_title <- TeX('Maize Covariates')}
  
  prob_plot <- 
    ggplot(probs_df, aes(x=rowno, y=prob_covariate_slab)) +
    geom_point(size=0.5) + xlab(xlab_title) + ylab(TeX('Marginal Posterior Probabilities')) +
    # scale_y_continuous(limits = c(0,600)) +
    scale_x_continuous(trans='log10') +
    theme_classic(base_size = 9)
  return(prob_plot)
}

prob_plot1 <- generate_plot('malware')
prob_plot2 <- generate_plot('maize') + ylab(TeX(''))

# Combined plot
prob_plot_combined <- ggarrange(prob_plot1, prob_plot2, common.legend = TRUE, legend = "bottom", nrow=1)
prob_plot_combined
# ggsave(filename = "/Users/niloybiswas/Dropbox/Apps/Overleaf/fast_spike_slab/images/dataset_prob_plot2.pdf", plot = prob_plot_combined, width = 4, height = 2.5)


